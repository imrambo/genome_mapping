Author: Ian Rambo
Contact: ian.rambo@utexas.edu
v.1.0.0.2

Reproducible read mapping builds with SCons.

This wrapper maps FASTQ reads against an assembly (e.g. genome) in FASTA format using BWA-MEM.
Additional functionality identifies single, R1-R2 paired, or interleaved FASTQ files and maps them to an assembly accordingly.

This script is intended to ensure you:
1) can reproduce large-scale mapping runs
2) do not repeat completed steps that might take a long time
3) do not produce huge intermediate files (e.g. unfiltered SAM)

Currently optimized for Linux 64-bit systems.

###############
Getting Started
###############
Cloning from the GitHub repository:


git clone https://github.com/imrambo/genome_mapping.git


Prerequisites: conda, python=3.8.1, samtools=1.10, biopython, python-magic=0.4.15
bwa=0.7.17, scons=3.1.2

I recommend using a conda environment (either with Miniconda3 or Anaconda) to run this script. You can create the
conda environment using the "environment_linux64.yml" file:

conda env create -f environment_linux64.yml

and then activate the environment:

conda activate scons_map

or, depending on your system:

source activate scons_map

###############
Running the script
###############
To see the available options for SCons, as well as the local options for the mapping, run this in the
same directory as the SConstruct file:

scons -h

Inputs:
--assembly=<a nucleotide FASTA to map reads to>
--sampleids=<sample id patterns of gzipped FASTQ files. Currently,
    files must be gzip compressed. The pattern is searched using a BASH-like glob.
    For FOO.fastq.gz, just pass FOO for this option.
    For multiple files, e.g. FOO.fastq.gz and BAR.fastq.gz, pass:
    FOO,BAR>

The script must be run from the same directory as the SConstruct.

cd /path/to/genome_mapping

Be sure to use all of these included options:
scons --fastq_dir=<path to directory containing fastq files> --assembly=<path to assembly you are mapping to> --outdir=<output directory> --sampleids=<sample id patterns of FASTQ files> --align_thread=<threads for BWA-mem> --samsort_thread=<theads for samtools sort> --samsort_mem=<memory per thread for samtools sort. Specify number and G,M,K> --nslice=<number of FASTQ headers to use for interleave check. Must be >4> --tmpdir=<directory for temporary files>

Note that for SCons, the options must not have spaces between the values and names.

For sanity reasons and ensuring the script runs correctly before doing a production run,
use the SCons --dry-run option.

By default, SCons will create a build in the same directory as the SConstruct.
Include the --rm_local_build=1 option to delete this build.
This option is coded outside of the SCons framework, so doing a --dry-run
with --rm_local_build=1 will raise an error since the directory is not built.
This can be ignored.
